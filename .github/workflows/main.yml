name: Check and Update .csproj Files

on:
  push:
    branches:
      - master  # Specify branches to trigger on push
  pull_request:
    branches:
      - master  # Specify branches to trigger on pull requests

jobs:
  check-csproj:
    runs-on: ubuntu-latest  # You can also use 'windows-latest' if needed

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3  # Fetches your code from the repository

      - name: Set up .NET
        uses: actions/setup-dotnet@v3  # Sets up the .NET environment
        with:
          dotnet-version: '7.x'  # Specify your desired .NET version

      - name: Install XML Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y xmlstarlet  # Installs XMLStarlet to edit XML files

      - name: Check and Update .csproj Files
        run: |
          # Find all .csproj files in the repository
          for csproj in $(find . -name "*.csproj"); do
            # Check if the required PackageReference exists, add if missing
            if ! grep -q "<PackageReference Include=\"SonarAnalyzer.CSharp\"" "$csproj"; then
              echo "Adding SonarAnalyzer.CSharp reference to $csproj"
              xmlstarlet ed -L \
                -s "/Project" -t elem -n "ItemGroup" \
                -s "/Project/ItemGroup[last()]" -t elem -n "PackageReference" \
                -i "/Project/ItemGroup/PackageReference[last()]" -t attr -n "Include" -v "SonarAnalyzer.CSharp" \
                -i "/Project/ItemGroup/PackageReference[last()]" -t attr -n "Version" -v "9.32.0.97167" "$csproj"
            fi

            # Check if the required Target element exists, add if missing
            if ! grep -q "Target Name=\"CheckSonarLintInVS\"" "$csproj"; then
              echo "Adding CheckSonarLintInVS target to $csproj"
              xmlstarlet ed -L \
                -s "/Project" -t elem -n "Target" \
                -i "/Project/Target[last()]" -t attr -n "Name" -v "CheckSonarLintInVS" \
                -i "/Project/Target[last()]" -t attr -n "BeforeTargets" -v "Build" \
                -i "/Project/Target[last()]" -t attr -n "Condition" -v "'$(BuildingInsideVisualStudio)' == 'true'" \
                -s "/Project/Target[last()]" -t elem -n "Message" \
                -i "/Project/Target/Message[last()]" -t attr -n "Importance" -v "high" \
                -i "/Project/Target/Message[last()]" -t attr -n "Text" -v "Checking if SonarLint folder exists..." \
                -s "/Project/Target[last()]" -t elem -n "ItemGroup" \
                -s "/Project/Target/ItemGroup[last()]" -t elem -n "SonarLintPath" \
                -i "/Project/Target/ItemGroup/SonarLintPath[last()]" -t attr -n "Include" -v "$(LOCALAPPDATA)\\Microsoft\\VisualStudio\\**\\SonarLint.VisualStudio*.dll" \
                -s "/Project/Target[last()]" -t elem -n "Error" \
                -i "/Project/Target/Error[last()]" -t attr -n "Condition" -v "!Exists(@(SonarLintPath))" \
                -i "/Project/Target/Error[last()]" -t attr -n "Text" -v "SonarLint extension is not installed. Please install SonarLint to proceed." "$csproj"
            fi
          done

      - name: Commit and Push Changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "Automatically added SonarAnalyzer.CSharp and CheckSonarLintInVS Target to .csproj files"
            git push
          else
            echo "No changes needed"
